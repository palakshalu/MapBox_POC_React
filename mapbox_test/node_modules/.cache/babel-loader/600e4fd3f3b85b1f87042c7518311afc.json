{"ast":null,"code":"import Geocoder from './geocoder';\nimport template from 'lodash.template';\nimport isEqual from 'lodash.isequal';\nimport extent from 'turf-extent';\n\nlet fs = require('fs'); // substack/brfs#39\n\n\nlet tmpl = template(fs.readFileSync(__dirname + '/../templates/inputs.html', 'utf8'));\n/**\n * Inputs controller\n *\n * @param {HTMLElement} el Summary parent container\n * @param {Object} store A redux store\n * @param {Object} actions Actions an element can dispatch\n * @param {Object} map The mapboxgl instance\n * @private\n */\n\nexport default class Inputs {\n  constructor(el, store, actions, map) {\n    const {\n      originQuery,\n      destinationQuery,\n      profile,\n      controls\n    } = store.getState();\n    el.innerHTML = tmpl({\n      originQuery,\n      destinationQuery,\n      profile,\n      controls\n    });\n    this.container = el;\n    this.actions = actions;\n    this.store = store;\n    this._map = map;\n    this.onAdd();\n    this.render();\n  }\n\n  animateToCoordinates(mode, coords) {\n    const {\n      origin,\n      destination,\n      routePadding\n    } = this.store.getState();\n\n    if (origin.geometry && destination.geometry && !isEqual(origin.geometry, destination.geometry)) {\n      // Animate map to fit bounds.\n      const bb = extent({\n        type: 'FeatureCollection',\n        features: [origin, destination]\n      });\n\n      this._map.fitBounds([[bb[0], bb[1]], [bb[2], bb[3]]], {\n        padding: routePadding\n      });\n    } else {\n      this._map.flyTo({\n        center: coords\n      });\n    }\n  }\n\n  onAdd() {\n    const {\n      clearOrigin,\n      clearDestination,\n      createOrigin,\n      createDestination,\n      setProfile,\n      reverse\n    } = this.actions;\n    const {\n      geocoder,\n      accessToken,\n      flyTo,\n      placeholderOrigin,\n      placeholderDestination,\n      zoom\n    } = this.store.getState();\n    this.originInput = new Geocoder(Object.assign({}, {\n      accessToken\n    }, geocoder, {\n      flyTo,\n      placeholder: placeholderOrigin,\n      zoom\n    }));\n    const originEl = this.originInput.onAdd(this._map);\n    const originContainerEl = this.container.querySelector('#mapbox-directions-origin-input');\n    originContainerEl.appendChild(originEl);\n    this.destinationInput = new Geocoder(Object.assign({}, {\n      accessToken\n    }, geocoder, {\n      flyTo,\n      placeholder: placeholderDestination,\n      zoom\n    }));\n    const destinationEl = this.destinationInput.onAdd(this._map);\n    this.container.querySelector('#mapbox-directions-destination-input').appendChild(destinationEl);\n    this.originInput.on('result', e => {\n      const coords = e.result.center;\n      createOrigin(coords);\n      this.animateToCoordinates('origin', coords);\n    });\n    this.originInput.on('clear', clearOrigin);\n    this.destinationInput.on('result', e => {\n      const coords = e.result.center;\n      createDestination(coords);\n      this.animateToCoordinates('destination', coords);\n    });\n    this.destinationInput.on('clear', clearDestination); // Driving / Walking / Cycling profiles\n\n    const profiles = this.container.querySelectorAll('input[type=\"radio\"]');\n    Array.prototype.forEach.call(profiles, el => {\n      el.addEventListener('change', () => {\n        setProfile(el.value);\n      });\n    }); // Reversing Origin / Destination\n\n    this.container.querySelector('.js-reverse-inputs').addEventListener('click', () => {\n      const {\n        origin,\n        destination\n      } = this.store.getState();\n      if (origin) this.actions.queryDestination(origin.geometry.coordinates);\n      if (destination) this.actions.queryOrigin(destination.geometry.coordinates);\n      reverse();\n    });\n  }\n\n  render() {\n    this.store.subscribe(() => {\n      const {\n        originQuery,\n        destinationQuery,\n        originQueryCoordinates,\n        destinationQueryCoordinates\n      } = this.store.getState();\n\n      if (originQuery) {\n        this.originInput.query(originQuery);\n        this.actions.queryOrigin(null);\n      }\n\n      if (destinationQuery) {\n        this.destinationInput.query(destinationQuery);\n        this.actions.queryDestination(null);\n      }\n\n      if (originQueryCoordinates) {\n        this.originInput.setInput(originQueryCoordinates);\n        this.animateToCoordinates('origin', originQueryCoordinates);\n        this.actions.queryOriginCoordinates(null);\n      }\n\n      if (destinationQueryCoordinates) {\n        this.destinationInput.setInput(destinationQueryCoordinates);\n        this.animateToCoordinates('destination', destinationQueryCoordinates);\n        this.actions.queryDestinationCoordinates(null);\n      }\n    });\n  }\n\n}","map":{"version":3,"names":["Geocoder","template","isEqual","extent","fs","require","tmpl","readFileSync","__dirname","Inputs","constructor","el","store","actions","map","originQuery","destinationQuery","profile","controls","getState","innerHTML","container","_map","onAdd","render","animateToCoordinates","mode","coords","origin","destination","routePadding","geometry","bb","type","features","fitBounds","padding","flyTo","center","clearOrigin","clearDestination","createOrigin","createDestination","setProfile","reverse","geocoder","accessToken","placeholderOrigin","placeholderDestination","zoom","originInput","Object","assign","placeholder","originEl","originContainerEl","querySelector","appendChild","destinationInput","destinationEl","on","e","result","profiles","querySelectorAll","Array","prototype","forEach","call","addEventListener","value","queryDestination","coordinates","queryOrigin","subscribe","originQueryCoordinates","destinationQueryCoordinates","query","setInput","queryOriginCoordinates","queryDestinationCoordinates"],"sources":["C:/Users/Surface-Pro/React/mapbox_test/node_modules/@mapbox/mapbox-gl-directions/src/controls/inputs.js"],"sourcesContent":["import Geocoder from './geocoder';\nimport template from 'lodash.template';\nimport isEqual from 'lodash.isequal';\nimport extent from 'turf-extent';\n\nlet fs = require('fs'); // substack/brfs#39\nlet tmpl = template(fs.readFileSync(__dirname + '/../templates/inputs.html', 'utf8'));\n\n/**\n * Inputs controller\n *\n * @param {HTMLElement} el Summary parent container\n * @param {Object} store A redux store\n * @param {Object} actions Actions an element can dispatch\n * @param {Object} map The mapboxgl instance\n * @private\n */\nexport default class Inputs {\n  constructor(el, store, actions, map) {\n    const { originQuery, destinationQuery, profile, controls } = store.getState();\n\n    el.innerHTML = tmpl({\n      originQuery,\n      destinationQuery,\n      profile,\n      controls\n    });\n\n    this.container = el;\n    this.actions = actions;\n    this.store = store;\n    this._map = map;\n\n    this.onAdd();\n    this.render();\n  }\n\n  animateToCoordinates(mode, coords) {\n    const { origin, destination, routePadding } = this.store.getState();\n    \n    if (origin.geometry &&\n        destination.geometry &&\n        !isEqual(origin.geometry, destination.geometry)) {\n      // Animate map to fit bounds.\n      const bb = extent({\n        type: 'FeatureCollection',\n        features: [origin, destination]\n      });\n\n      this._map.fitBounds([[bb[0], bb[1]], [bb[2], bb[3]]], {padding: routePadding});\n    } else {\n      this._map.flyTo({ center: coords });\n    }\n  }\n\n  onAdd() {\n    const {\n      clearOrigin,\n      clearDestination,\n      createOrigin,\n      createDestination,\n      setProfile,\n      reverse\n    } = this.actions;\n\n    const { geocoder, accessToken, flyTo, placeholderOrigin, placeholderDestination, zoom } = this.store.getState();\n\n    this.originInput = new Geocoder(Object.assign({}, {\n      accessToken\n    }, geocoder, {flyTo, placeholder: placeholderOrigin, zoom}));\n\n    const originEl = this.originInput.onAdd(this._map);\n    const originContainerEl = this.container.querySelector('#mapbox-directions-origin-input');\n    originContainerEl.appendChild(originEl);\n\n    this.destinationInput = new Geocoder(Object.assign({}, {\n      accessToken\n    }, geocoder, {flyTo, placeholder: placeholderDestination, zoom}));\n\n    const destinationEl = this.destinationInput.onAdd(this._map);\n    this.container.querySelector('#mapbox-directions-destination-input').appendChild(destinationEl);\n\n    this.originInput.on('result', (e) => {\n      const coords = e.result.center;\n      createOrigin(coords);\n      this.animateToCoordinates('origin', coords);\n    });\n\n    this.originInput.on('clear', clearOrigin);\n\n    this.destinationInput.on('result', (e) => {\n      const coords = e.result.center;\n      createDestination(coords);\n      this.animateToCoordinates('destination', coords);\n    });\n\n    this.destinationInput.on('clear', clearDestination);\n\n    // Driving / Walking / Cycling profiles\n    const profiles = this.container.querySelectorAll('input[type=\"radio\"]');\n    Array.prototype.forEach.call(profiles, (el) => {\n      el.addEventListener('change', () => {\n        setProfile(el.value);\n      });\n    });\n\n    // Reversing Origin / Destination\n    this.container\n      .querySelector('.js-reverse-inputs')\n      .addEventListener('click', () => {\n        const { origin, destination } = this.store.getState();\n        if (origin) this.actions.queryDestination(origin.geometry.coordinates);\n        if (destination) this.actions.queryOrigin(destination.geometry.coordinates);\n        reverse();\n      });\n  }\n\n  render() {\n    this.store.subscribe(() => {\n      const {\n        originQuery,\n        destinationQuery,\n        originQueryCoordinates,\n        destinationQueryCoordinates\n      } = this.store.getState();\n\n      if (originQuery) {\n        this.originInput.query(originQuery);\n        this.actions.queryOrigin(null);\n      }\n\n      if (destinationQuery) {\n        this.destinationInput.query(destinationQuery);\n        this.actions.queryDestination(null);\n      }\n\n      if (originQueryCoordinates) {\n        this.originInput.setInput(originQueryCoordinates);\n        this.animateToCoordinates('origin', originQueryCoordinates);\n        this.actions.queryOriginCoordinates(null);\n      }\n\n      if (destinationQueryCoordinates) {\n        this.destinationInput.setInput(destinationQueryCoordinates);\n        this.animateToCoordinates('destination', destinationQueryCoordinates);\n        this.actions.queryDestinationCoordinates(null);\n      }\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}